// Code generated by protoc-gen-go. DO NOT EDIT.
// source: datagram.proto

// TODO:
// Come up with a better name for this.

package beavertail

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DatagramAck_AckType int32

const (
	DatagramAck_OK   DatagramAck_AckType = 0
	DatagramAck_BAD  DatagramAck_AckType = 1
	DatagramAck_BUSY DatagramAck_AckType = 2
)

var DatagramAck_AckType_name = map[int32]string{
	0: "OK",
	1: "BAD",
	2: "BUSY",
}

var DatagramAck_AckType_value = map[string]int32{
	"OK":   0,
	"BAD":  1,
	"BUSY": 2,
}

func (x DatagramAck_AckType) String() string {
	return proto.EnumName(DatagramAck_AckType_name, int32(x))
}

func (DatagramAck_AckType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a022eadfdecf39fa, []int{1, 0}
}

type DatagramPush struct {
	BusID                    string   `protobuf:"bytes,1,opt,name=busID,proto3" json:"busID,omitempty"`
	PassengerCount           uint32   `protobuf:"varint,2,opt,name=passengerCount,proto3" json:"passengerCount,omitempty"`
	PassengerCountConfidence float64  `protobuf:"fixed64,3,opt,name=passengerCountConfidence,proto3" json:"passengerCountConfidence,omitempty"`
	Latitude                 float64  `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude                float64  `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Timestamp                int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *DatagramPush) Reset()         { *m = DatagramPush{} }
func (m *DatagramPush) String() string { return proto.CompactTextString(m) }
func (*DatagramPush) ProtoMessage()    {}
func (*DatagramPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_a022eadfdecf39fa, []int{0}
}

func (m *DatagramPush) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatagramPush.Unmarshal(m, b)
}
func (m *DatagramPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatagramPush.Marshal(b, m, deterministic)
}
func (m *DatagramPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatagramPush.Merge(m, src)
}
func (m *DatagramPush) XXX_Size() int {
	return xxx_messageInfo_DatagramPush.Size(m)
}
func (m *DatagramPush) XXX_DiscardUnknown() {
	xxx_messageInfo_DatagramPush.DiscardUnknown(m)
}

var xxx_messageInfo_DatagramPush proto.InternalMessageInfo

func (m *DatagramPush) GetBusID() string {
	if m != nil {
		return m.BusID
	}
	return ""
}

func (m *DatagramPush) GetPassengerCount() uint32 {
	if m != nil {
		return m.PassengerCount
	}
	return 0
}

func (m *DatagramPush) GetPassengerCountConfidence() float64 {
	if m != nil {
		return m.PassengerCountConfidence
	}
	return 0
}

func (m *DatagramPush) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *DatagramPush) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *DatagramPush) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type DatagramAck struct {
	Acknowledgment       DatagramAck_AckType `protobuf:"varint,1,opt,name=acknowledgment,proto3,enum=beavertail.DatagramAck_AckType" json:"acknowledgment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DatagramAck) Reset()         { *m = DatagramAck{} }
func (m *DatagramAck) String() string { return proto.CompactTextString(m) }
func (*DatagramAck) ProtoMessage()    {}
func (*DatagramAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_a022eadfdecf39fa, []int{1}
}

func (m *DatagramAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatagramAck.Unmarshal(m, b)
}
func (m *DatagramAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatagramAck.Marshal(b, m, deterministic)
}
func (m *DatagramAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatagramAck.Merge(m, src)
}
func (m *DatagramAck) XXX_Size() int {
	return xxx_messageInfo_DatagramAck.Size(m)
}
func (m *DatagramAck) XXX_DiscardUnknown() {
	xxx_messageInfo_DatagramAck.DiscardUnknown(m)
}

var xxx_messageInfo_DatagramAck proto.InternalMessageInfo

func (m *DatagramAck) GetAcknowledgment() DatagramAck_AckType {
	if m != nil {
		return m.Acknowledgment
	}
	return DatagramAck_OK
}

func init() {
	proto.RegisterEnum("beavertail.DatagramAck_AckType", DatagramAck_AckType_name, DatagramAck_AckType_value)
	proto.RegisterType((*DatagramPush)(nil), "beavertail.DatagramPush")
	proto.RegisterType((*DatagramAck)(nil), "beavertail.DatagramAck")
}

func init() {
	proto.RegisterFile("datagram.proto", fileDescriptor_a022eadfdecf39fa)
}

var fileDescriptor_a022eadfdecf39fa = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4f, 0x83, 0x30,
	0x14, 0xc7, 0x57, 0x60, 0x6c, 0x7b, 0x4e, 0x42, 0x1a, 0x13, 0x9b, 0xc5, 0x44, 0x42, 0x8c, 0xe1,
	0xc4, 0x61, 0xde, 0xf4, 0xc4, 0x46, 0x62, 0xcc, 0x0e, 0x1a, 0xd4, 0x83, 0xc7, 0x02, 0x15, 0x09,
	0xd0, 0x12, 0x28, 0x1a, 0x13, 0x3f, 0xac, 0x1f, 0xc5, 0xc0, 0x36, 0xd1, 0x65, 0x3b, 0xbe, 0xdf,
	0xaf, 0xaf, 0xed, 0xfb, 0x3f, 0x30, 0x62, 0x2a, 0x69, 0x52, 0xd1, 0xc2, 0x2d, 0x2b, 0x21, 0x05,
	0x86, 0x90, 0xd1, 0x77, 0x56, 0x49, 0x9a, 0xe6, 0xf6, 0x37, 0x82, 0xa9, 0xbf, 0xd1, 0x0f, 0x4d,
	0xfd, 0x86, 0x4f, 0x60, 0x18, 0x36, 0xf5, 0x9d, 0x4f, 0x90, 0x85, 0x9c, 0x49, 0xb0, 0x2e, 0xf0,
	0x25, 0x18, 0x25, 0xad, 0x6b, 0xc6, 0x13, 0x56, 0x2d, 0x45, 0xc3, 0x25, 0x51, 0x2c, 0xe4, 0x1c,
	0x07, 0x3b, 0x14, 0x5f, 0x03, 0xf9, 0x4f, 0x96, 0x82, 0xbf, 0xa6, 0x31, 0xe3, 0x11, 0x23, 0xaa,
	0x85, 0x1c, 0x14, 0x1c, 0xf4, 0x78, 0x06, 0xe3, 0x9c, 0xca, 0x54, 0x36, 0x31, 0x23, 0x5a, 0x77,
	0xf6, 0xb7, 0xc6, 0x67, 0x30, 0xc9, 0x05, 0x4f, 0xd6, 0x72, 0xd8, 0xc9, 0x1e, 0xb4, 0x56, 0xa6,
	0x05, 0xab, 0x25, 0x2d, 0x4a, 0xa2, 0x5b, 0xc8, 0x51, 0x83, 0x1e, 0xd8, 0x5f, 0x70, 0xb4, 0x9d,
	0xd0, 0x8b, 0x32, 0x7c, 0x0b, 0x06, 0x8d, 0x32, 0x2e, 0x3e, 0x72, 0x16, 0x27, 0x05, 0xe3, 0xb2,
	0x9b, 0xd4, 0x98, 0x9f, 0xbb, 0x7d, 0x2c, 0xee, 0x9f, 0x06, 0xd7, 0x8b, 0xb2, 0xa7, 0xcf, 0x92,
	0x05, 0x3b, 0x6d, 0xf6, 0x05, 0x8c, 0x36, 0x0a, 0xeb, 0xa0, 0xdc, 0xaf, 0xcc, 0x01, 0x1e, 0x81,
	0xba, 0xf0, 0x7c, 0x13, 0xe1, 0x31, 0x68, 0x8b, 0xe7, 0xc7, 0x17, 0x53, 0x99, 0xaf, 0x60, 0xda,
	0xe6, 0xba, 0xbd, 0x10, 0xdf, 0x80, 0xd6, 0xe5, 0x4c, 0xf6, 0x3d, 0xd7, 0x9a, 0xd9, 0xe9, 0x81,
	0x8f, 0xd8, 0x83, 0x50, 0xef, 0x16, 0x78, 0xf5, 0x13, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xf6, 0x44,
	0x9d, 0xd2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PushDatagramClient is the client API for PushDatagram service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushDatagramClient interface {
	// In this service we expose an RPC called Push
	// it takes in an DatagramPush and returns an DatagramAck
	// dont ask me about the `{}` bc idk :(
	Push(ctx context.Context, in *DatagramPush, opts ...grpc.CallOption) (*DatagramAck, error)
}

type pushDatagramClient struct {
	cc grpc.ClientConnInterface
}

func NewPushDatagramClient(cc grpc.ClientConnInterface) PushDatagramClient {
	return &pushDatagramClient{cc}
}

func (c *pushDatagramClient) Push(ctx context.Context, in *DatagramPush, opts ...grpc.CallOption) (*DatagramAck, error) {
	out := new(DatagramAck)
	err := c.cc.Invoke(ctx, "/beavertail.PushDatagram/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushDatagramServer is the server API for PushDatagram service.
type PushDatagramServer interface {
	// In this service we expose an RPC called Push
	// it takes in an DatagramPush and returns an DatagramAck
	// dont ask me about the `{}` bc idk :(
	Push(context.Context, *DatagramPush) (*DatagramAck, error)
}

// UnimplementedPushDatagramServer can be embedded to have forward compatible implementations.
type UnimplementedPushDatagramServer struct {
}

func (*UnimplementedPushDatagramServer) Push(ctx context.Context, req *DatagramPush) (*DatagramAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}

func RegisterPushDatagramServer(s *grpc.Server, srv PushDatagramServer) {
	s.RegisterService(&_PushDatagram_serviceDesc, srv)
}

func _PushDatagram_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatagramPush)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushDatagramServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beavertail.PushDatagram/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushDatagramServer).Push(ctx, req.(*DatagramPush))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushDatagram_serviceDesc = grpc.ServiceDesc{
	ServiceName: "beavertail.PushDatagram",
	HandlerType: (*PushDatagramServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _PushDatagram_Push_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "datagram.proto",
}
